!!!
%html
  %head
    %title echoplexus v0.2.6
    %link{:rel => "stylesheet", :href => "css/all.min.css", :type => "text/css"}
    %link{:rel => "shortcut icon", :type => "image/png", :href => "/favicon.png"}
    %link{:href => "https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css", :rel=>"stylesheet"}
    %meta{:charset => "UTF-8"}
    %meta{:name=>"viewport", :content=>"width=device-width,initial-scale=1"}
    %meta{:name=>"description", :content=>"echoplexus - a socket.io powered real-time anonymous chat, collaborative coding REPL, whiteboard, WebRTC voice/video calls"}
    %meta{:name=>"author", :content=>"Anthony Cameron"}
    %script{type: "text/javascript", src: "js/jquery-2.1.0.min.js"}
    %script{type: "text/javascript", src: "js/three.min.js"}
    %script{type: "text/javascript", src: "js/bg.js"}
    %script{:type => "text/javascript", src: "js/misc.js"}
  %body
    .flashy{style: 'height: 500px;'}
      %header.flashy-header
        echoplexus
        %small.accent v0.2.6
      %img.flashy-logo{:width=>"180", :height=>"180", :src => "img/echoplexus-logo.png"}
    .main-content
      %header.top-header.pure-u-1
        .pure-menu.pure-menu-open.pure-menu-horizontal
          %ul.top-nav
            %li
              %a{:href=>"#overview"} Features
            %li
              %a{:href=>"#motivation"} Motivation
            %li
              %a{:href=>"#whatsnew"} News
            %li
              %a.iconal.external.different-context{:href=>"https://github.com/qq99/echoplexus", :title => "Echoplexus on Github", :target => "_blank"}
                %i.fa.fa-github
            %li
              %a.iconal.external.different-context{:href=>"https://twitter.com/echoplexus", :title => "Echoplexus on Twitter", :target => "_blank"}
                %i.fa.fa-twitter
            %li
              %a.iconal.external.different-context{:href=>"https://blog.echoplex.us/rss/"}
                %i.fa.fa-rss
            %li.pull-right.highres
              %button.firefox-btn{:href => "https://chat.echoplex.us"} Start chatting!
            %li.lowres
              %a{href: "https://chat.echoplex.us"} Start chatting
      %section#overview
        .readable-section
          %h1
            echoplexus

          .firefox-webapp
            %button.firefox-btn{:onclick => "window.installApplication()"} Install the Firefox Application
          / .android-apk
          /   %button.firefox-btn{:href => "/echoplexus.apk"} Install the Android Application
          %p
            Echoplexus is an anonymous, web-based, IRC-like chatting platform that makes its best effort to respect your privacy.  It allows you to create public or private channels.  You can secure a pseudonym for
            %a{:href=>"http://en.wikipedia.org/wiki/Pseudonymity", :target => "_blank"} linkable anonymity,
            and
            %a{:href=>"https://blog.echoplex.us/2014/03/05/echoplexus-and-pgp/"} secure it with PGP.
          %p
            Most importantly, echoplexus is open source software. (GPLv3 and MIT)
            %a{:href => "https://github.com/qq99/echoplexus"} Feel free to check out the code on github!
            It's written in CoffeeScript (Backbone, jQuery) and node.js (socket.io) using redis.
          .pure-g-r.splashy
            .pure-u-1-2
              .callout
                %i.fa.fa-comments-o
                %h2
                  %a{:href => "https://chat.echoplex.us/"} Chat
                %p No sign up &ndash; seriously.  Start chatting anonymously by visiting a link.  Make a new chat channel by sending a link.
                %button.call-to-action.firefox-btn{:href => "https://chat.echoplex.us"} Start chatting.
            .pure-u-1-2
              .callout
                %i.fa.fa-code
                %h2
                  %a{:href => "https://chat.echoplex.us/"} Code
                %p Stuck on a coding problem?  Just want to share a text blob?  Edit and evaluate code in real-time with everybody in the same channel.
                %button.call-to-action.firefox-btn{:href=>"https://chat.echoplex.us/"} Start coding.
          .pure-g-r.splashy.second
            .pure-u-1-2
              .callout
                %i.fa.fa-pencil-square-o
                %h2
                  %a{:href => "https://chat.echoplex.us/"} Draw
                %p You may have whiteboards in your office, but can you draw at the same position at the same time?
                %button.call-to-action.firefox-btn{:href=>"https://chat.echoplex.us/"} Express yourself.
            .pure-u-1-2
              .callout
                %i.fa.fa-phone
                %h2
                  %a{:href => "https://chat.echoplex.us/"} Call
                %p Peer2Peer video and audio chat with friends and strangers!  No plugins/installs, just a modern browser.
                %button.call-to-action.firefox-btn{:href=>"https://chat.echoplex.us/"} Join in.
      %section#chat
        .readable-section
          %img{src: './img/features/chat-view.png'}
          %h1 Chat
          %p The most important part of echoplexus is the support for anonymity. Users hate sign-ups. Anonymity fosters freedom of speech. Linkable anonymity is also possible.
          %p echoplexus will attempt to embed any image URLs directly into the Media bar on the right side. Similarly, it will attempt to parse YouTube URLs and embed an object. When the server encounters a URL, it can take a screenshot of the page in question along and attempt to provide a short excerpt to the user. To protect your privacy, media embedding is disabled for the client by default.
          %p You can edit any message you've sent up to 2 hours ago, as long as you haven't lost your connection. This duration is configurable by server operators. You can do this by double clicking the message, or clicking the pencil icon that appears while hovering the message.
          %p When you join a channel, you'll automatically sync some of the most recent chat history you may have missed while you were away. At any time, you can pull the chatlog history for that channel.

          %h2 Currently Supported Commands:
          %ul
            %li
              %code /join [channel_name]
              %p Join a channel.  All channel names begin with "/", even if not supplied
            %li
              %code /leave
              %p Leaves the currently active channel
            %li
              %code /topic [topic string]
              %p Set the topic of conversation for the channel (the message that sits visible at all times at the top)
            %li
              %code /broadcast [a chat message]
              %p Send the message to every channels that you're connected to.  Alias: `/bc`
            %li
              %code /nick [your_nickname]
              %p Changes your name to whatever you desire.  This preference is stored in a cookie on a per channel basis
            %li
              %code /private [channel_password]
              %p Makes a channel private.  Only those with the password may enter it.
            %li
              %code /password [channel_password]
              %p Supply the password to a private channel after joining it.  Incorrect attempts will notify everybody in the room.
            %li
              %code /public
              %p Make the private channel a public channel.
            %li
              %code /whisper [nickname]
              %p Send a private message that is visible to anybody with the nickname you've supplied.  Aliases: `/w`, `/tell`, `/t`, `/pm`.  *Pro-tip:* Press "ctrl+r" to quick-reply to the last person who has whispered you.
            %li
              %code /pull [N]
              %p Sync the N latest chat messages that you've missed while you weren't connected to the channel.  Currently, maximum is set to 100 for UI responsiveness until a more efficient rendering method is added.
            %li
              %code [partial nickname]+&lt;TABKEY&gt;
              %p Autocompletes (based on L-Distance) to the name of somebody in the channel
            %li
              %code @[nickname]
              %p Gets the attention of the user in question
            %li
              %code /color [#FFFFFF]
              %p Supply a 6-digit hex code with or without the `#`, and change your nickname's color
            %li
              %code /edit #[integer] [new body text]
              %p Changes the body text of a specific message to something else.  Useful for correcting typos and censoring yourself.  You can also double click on a chat message to edit inline-- press enter to confirm, escape or click elsewhere to cancel.
            %li
              %code >>[integer]
              %p Quotes a specific chat message.  Clicking the Reply icon on the chat message will automatically add this for you.
            %li
              %code /chown [password]
              %p
                Become the channel owner.  This gives you all permissions in the channel and allows you to
                %code /chmod
            %li
              %code /chmod [(+|-)permissionName] [optional username]
              %p This allows you to selectively toggle on/off certain permissions for the particular channel or user.  User permissions are checked first, and if not set, then channel permissions are checked.  If a username is not supplied, then the permission is specified at the channel level.
            %li
              %code /github track [github repo URL]
              %p This generates a URL that you can add to your repo's postreceive hooks on Github.
            %li
              %code /roll [1d20|2d30|5d6|XdY]
              %p RPG players will enjoy this command, allowing you to command the server to roll a set of dice of certain multiples.  Each roll is displayed then added together.  Trying to roll an invalid dice format will default to a d20.  Aliases: `/r`
            %li
              %code /destroy
              %p If you are the channel owner, you can delete the entire chatlog history for the channel in question.  There is no recovery!

          %img{src: './img/features/github-integration-2.png'}

          %h2 Permissions
          %p The currently implemented list of permissions (and their defaults) includes:
          %ul
            %li canSetTopic: null
            %li canMakePrivate: null
            %li canMakePublic: null
            %li canSpeak: true
            %li canPullLogs: true
            %li canUploadFile: null
            %li canSetGithubPostReceiveHooks: null
          %p Example: `/chmod -canSpeak`: now everyone in the channel can't speak unless you do `/chmod [username] +canSpeak` to selectively enable it for a specific user.

          %h2 Server-hosted file upload
          %img.pull-left{src: './img/features/file-upload.png'}
          %p You can upload a file by dragging it onto the "Media & Links" panel.  From there, you'll have the option of confirming the upload, as well as an image preview.
          %p
            For server operators, this must be enabled in
            %code config.coffee
            (see
            %code config.sample.js
            ).  You have the option of setting a max file size limit.  Further, it must be enabled on a per-channel basis by the channel operator.  If there is not yet a channel operator, you will need to use
            %code /chown [operator password]
            to become it.
          %p This feature is enabled on chat.echoplex.us, but channel owners must toggle it on.
          .clear
          %h2 A bridge to IRC networks
          %p
            To use IRC via echoplexus, join a new channel name like
            %code irc:chat.freenode.net#math
          %p Many people that use group-chat based messengers will be familiar to IRC.  Some may not wish to have to start up 2 clients to use IRC and echoplexus.  As of 0.2.6, you can now connect to an IRC channel using echoplexus as your middleman.  For some, this might be a preferable way to connect to an IRC network, obfuscating your IP.
          %ul
            %li Echoplexus operators can theoretically see all messages to/from any IRC network, so keep that in mind!
            %li Each room you join in a specific network is actually a new connection established by echoplexus.  As such, IRC will require you to use a different nickname since it will consider your 2+ rooms different people connecting.  This is a known limitation in echoplexus at the moment.  If enough people use the IRC feature regularly enough, we may be able to multiplex a single IRC connection.
            %li Some features, like PGP and encryption, may not work properly when used through IRC
          %h2 Security focused
          %img.pull-right{src: './img/features/security-focused.png'}
          %p
            Security is at the forefront of the design of echoplexus.  We don't require any kind of identification to use echoplexus on the
            %a{href: "https://chat.echoplex.us"} chat.echoplex.us
            server.  We strive to make sure our server configuration is the most secure, and provide a solid nginx SSL configuration for potential echoplexus server operators.
          %p On echoplex.us, your data is not shared with anyone.  No analytics, no cookies tracking your visits, no scripts parsing the server logs to see how often you visit.
          %p Images are not embedded by default.  User linked images can be embedded, but in some cases, you may not want to.  Embedding a 3rd party image implies downloading it from said server, which risks exposing information about you to that host.  A malicious user could find out your IP by linking the channel a picture that resides on his servers.
          .clear
          %h2 Private channels and channel ownership
          %p
            You'll notice the padlock icon above the chat input area. When you click this button, you'll have the option of providing a shared secret (you should negotiate this through a secure side channel,
            %strong not on echoplexus
            ). Once supplied, the button will change to Encrypted. Encryption is performed with the Crypto-JS library (256-bit AES).
          %p
            Furthermore,
            %a{href: "https://blog.echoplex.us/2014/03/05/echoplexus-and-pgp/" } you can use PGP signatures and/or PGP encryption.
            You can layer your PGP encrypted messages with shared secret encryption.
          %p Things that are not encrypted with this shared secret:
          %ul
            %li Draw (infeasible, stream of data, low impact)
            %li Code (infeasible, stream of data, higher impact)
            %li Call (secure transmission is baked into WebRTC)
          %p Specific things that will not while encrypted:
          %ul
            %li Permissions set on a specific user (since the server doesn't know their nickname)
            %li PhantomJS webshot previews (since the server can't read the body text to screenshot the URL)
            %li Any other commands that rely on server knowing the body contents of a message
          %h2 Encryption
          %p You can make a channel private to only those who know a shared password via the /private command. To do that, you must become the channel owner with the /chown command.
          %p Your private channel and channel owner passwords are first salted with 256 random bytes from node's crypto.randomBytes. Then, they are run through 4096 iterations of crypto.pbkdf2 with a key length of 256 bytes before the is stored in Redis. In your deployment, these measures can be considered meaningless if you do not use HTTPS.
          %h2 Linkable identity via PGP
          %img.pull-left{src: './img/features/userlist-pgp.png'}
          %p
            PGP integration is baked right into echoplexus.  This means that you can sign and encrypt your messages with public-key infrastructure.  For more information on exactly what this entails, see
            %a{href: 'https://blog.echoplex.us/2014/03/05/echoplexus-and-pgp/'} this blog post
            describing what PGP is and roughly how it works.
          %p Users with PGP enabled will be shown in the userlist with a key beside their name.  Clicking this key icon will cycle that public key's trust level between "Untrusted" (red), "Neutral" (orange), and "Trusted" (green).
          %img.pull-right{src: './img/features/pgp-verified-chat-message.png'}
          %p When users sign or encrypt their messages, you can check the status of those operations with icons displayed to the left of their username in the chat channel.  If a user usually signs his messages, and you trust that key, and the verification is successful, then you will see a green checkmark.
          %p If he's using a different key that you don't trust, then you will see an orange checkmark.  If his signature doesn't check out (a potential sign of an impersonator), then you will see a red X.
          %p
            This way, anonymity/pseudonymity can coexist with strong identity guarantees!  You may not know exactly
            %em who
            your chat participant is, but you can verify that he is the same person that he was yesterday (if he's signing his messages).
          %h2 Embeddable
          %p
            Use echoplexus as a widget on your site.  e.g.,
            %br
            %code &lt;iframe src="https://embed.echoplex.us/embed.html?channel=/echoplexus-news frameborder="0"&gt;&lt;/iframe&gt;
          %div
            %iframe.echoplexus-frame{:eventual_src => "https://embed.echoplex.us/embed.html?channel=/", :frameborder=> "0"}
      %section#code
        / https://www.flickr.com/photos/riebart/4466482623
        .readable-section
          %img{src: './img/features/coding.png'}
          %h1 Code
          %p Currently, interactive and collaborative HTML & JavaScript is supported.  A sandboxed iframe is used to protect the contents of your browser, but just to be completely safe, no code is evaluated without your consent.  A LiveReload checkbox allows you to re-evaluate as you or someone else types.  The "Re-initialize Iframe" button resets & wipes the iframe back to its initial state (useful should it get messed up).
          %p The iframe has access to jQuery and underscore.js for user convenience.  More libraries may be exposed in the future.
          %p We hope to support Ruby and Python next, in the near term.  Other languages will come based on support or &ndash; your contribution!
      %section#draw
        / https://www.flickr.com/photos/ellebeere/4605043024
        .readable-section
          %img.pull-left{src: './img/features/drawing.png'}
          %h1 Draw
          %p Right now, the Draw capabilities are fairly basic; just enough to facilitate sharing a persistent whiteboard with the people you're chatting with.  I do not think that there is a need to completely re-invent the wheel (and end up re-implementing Photoshop/Illustrator here).
      %section#call
        / https://www.flickr.com/photos/suckamc/11059685
        .readable-section
          %img.pull-right{src: './img/features/no-call.png'}
          %h1 Call
          %p Make a secure Peer2Peer audio & video call with everyone in the same channel as you, using WebRTC.
          %p You'll want to use Chrome Canary/Beta or Firefox Aurora/Beta, which, at the time of writing, have experimental WebRTC support.
      %section#motivation
        .readable-section
          %h1 Motivation
          .pure-g-r
            .pure-u-1-3
              %ul
                %li Client-side encryption
                %li Supports anonymity
                %li Respects your privacy
                %li No set-up
                %li No sign-up
            .pure-u-1-3
              %ul
                %li Rich media in chat (images, youtube, website previews)
                %li You can own your own data
                %li Group chat by default
                %li Private messaging
            .pure-u-1-3
              %ul
                %li Code in real-time, together
                %li Chat while you code
                %li Draw together
                %li Open-source, extend it!

          %p Echoplexus works well for teams that want to enable rich, secure, and truly privacy respecting chat. Since it's OSS and fairly easy to install, you can have your own private communication infrastructure without needing to rely on cloud services. There's peace of mind in that. We've found it's also great for groups of friends who care about their data (and who may or may not be looking at it).
          %p Many teams might use a pay-to-use web-based communication platform. There are many out there, and we've derived some inspiration from them in our development. Echoplexus bridges that gap with open source software.
          %p Others use IRC. However, it's somewhat time consuming to set up a server, many people don't really want to set up a client, and they certainly don't want to configure servers and ports in their client. In the end, most of the users are stuck with a text-only interface (no rich media). Your IP is also visible to others unless you go through measures to hide it.
          %p Other services (like Google Talk / Hangouts) are OK, but by default they are 1v1 chat, a closed client platform, and cloud-based.
          %p Almost all of the alternatives require you to specifiy some kind of name before you start chatting. Worse, register with an e-mail address. I always thought the biggest barrier was requiring the user to perform actions he doesn't care about completing -- he's got many other things to do! Anonymity can be conducive to great conversations.
          %h1 Future goals
          %ul
            %li Distributed network of many echoplexus servers
            %li Peer2Peer file transfer via WebRTC
            %li Peer2Peer chat, boostrapped by Echoplexus (to facilitate off-the-record communication)
            %li Increased selection of languages for the real-time collaborative REPL
          %p
            Be sure to check out the
            %a{href: "https://github.com/qq99/echoplexus/issues?labels=enhancement&milestone=&page=1&state=open"} planned enhancements
      %section#whatsnew
        .readable-section
          %h1 What's new?
          %p
            Please take a look at the
            %a{href: "https://github.com/qq99/echoplexus/blob/master/CHANGELOG.md"} CHANGELOG
            hosted on Github for detailed information on what's changed between releases.
          %p
            Generally, you will want to download and use the newest release,
            %a{href: "https://github.com/qq99/echoplexus/releases"} tagged here

      %section#install
        .readable-section
          %h1 Installation
          %p
            Please see the instructions on
            %a{:href => "https://github.com/qq99/echoplexus/blob/master/INSTALL.md"} github.
